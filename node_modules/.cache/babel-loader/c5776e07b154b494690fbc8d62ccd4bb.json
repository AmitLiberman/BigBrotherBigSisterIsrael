{"ast":null,"code":"var _jsxFileName = \"/Users/wadie/BigBrotherBigSisterIsrael/src/navBarComponents/wallComponents/wall/WallPost.jsx\";\nimport * as React from \"react\";\nimport \"./WallPost.css\";\nimport { Post } from \"./post/Post\";\nimport AddPicture from \"./AddPicture\";\nimport firebase from \"../../../config/Firebase\";\nimport Loader from 'react-loader-spinner';\n\nclass WallPost extends React.Component {\n  constructor() {\n    super();\n\n    this.getPosts = () => {\n      var postsRef;\n      var copyArray = [];\n      this.usersRef.doc(this.userUid).get().then(doc => {\n        if (doc.data().type === 'חונך') postsRef = doc.ref.collection('Posts');else if (doc.data().type === 'חניך') postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\n      }).then(() => {\n        postsRef.orderBy('timeStamp', 'desc').limit(5).get().then(docs => {\n          this.setState({\n            lastPostVisible: docs.docs[docs.docs.length - 1]\n          }, () => {\n            if (docs.empty) this.setState({\n              lastPostVisible: {\n                timeStamp: Date.now() / 1000 - 7200\n              }\n            });else if (typeof this.state.lastPostVisible === 'undefined') this.setState({\n              loadedAll: true\n            });\n          });\n          var ind = 0;\n          docs.forEach(doc => {\n            this.setState({\n              currId: this.postID + 1\n            });\n            this.postID = this.postID + 1;\n            var images = [];\n            this.cloudRef.child('wall_pictures/' + doc.id).list().then(pics => {\n              pics.items.forEach((pic, index) => {\n                pic.getDownloadURL().then(url => {\n                  images.splice(index, 0, url);\n\n                  if (images.length === pics.items.length) {\n                    var uploadedPostObj = {\n                      id: this.postID,\n                      body: doc.data().text,\n                      img: images,\n                      timeStamp: doc.data().timeStamp,\n                      uploader: doc.data().uploader,\n                      doc_id: doc.id\n                    };\n                    Object.assign(copyArray, this.state.postArray);\n                    copyArray.splice(ind, 0, uploadedPostObj);\n                    copyArray.sort((a, b) => this.sortFunc(a, b));\n                    this.setState({\n                      postArray: [...copyArray]\n                    });\n                  }\n                });\n              });\n            });\n\n            if (!doc.data().img) {\n              var uploadedPostObj = {\n                id: this.postID,\n                body: doc.data().text,\n                img: [],\n                timeStamp: doc.data().timeStamp,\n                uploader: doc.data().uploader,\n                doc_id: doc.id\n              };\n              Object.assign(copyArray, this.state.postArray);\n              copyArray.splice(ind, 0, uploadedPostObj);\n              copyArray.sort((a, b) => this.sortFunc(a, b));\n              this.setState({\n                postArray: [...copyArray]\n              });\n            }\n\n            ind++;\n          });\n        });\n      }).catch(e => console.log(e.name));\n    };\n\n    this.readNewmessages = () => {\n      var linkUser;\n      var postsRef;\n      this.usersRef.doc(this.userUid).get().then(doc => {\n        if (doc.data().type === 'חונך') postsRef = doc.ref.collection('Posts');else if (doc.data().type === 'חניך') postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\n        linkUser = doc.data().link_user;\n      }).then(() => {\n        postsRef.where('uploader', '==', linkUser).where('unread', '==', true).get().then(docs => docs.forEach(doc => doc.ref.update({\n          unread: false\n        })));\n      }).catch(e => console.log(e.name));\n    };\n\n    this.sortFunc = (a, b) => {\n      if (a.timeStamp > b.timeStamp) return 1;\n      if (a.timeStamp < b.timeStamp) return -1;\n      return 0;\n    };\n\n    this.deleteEvent = (index, doc_id) => {\n      var con = window.confirm(\"האם אתה בטוח שברצונך למחוק את הפוסט?\");\n      if (!con) return;\n      var postsRef;\n      this.usersRef.doc(this.userUid).get().then(doc => {\n        if (doc.data().type === 'חונך') postsRef = doc.ref.collection('Posts');else if (doc.data().type === 'חניך') postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\n      }).then(() => {\n        postsRef.doc(doc_id).delete();\n        var picLen;\n        this.cloudRef.child(\"wall_pictures/\" + doc_id).list().then(list => picLen = list.items.length).then(() => {\n          for (let i = 0; i < picLen; i++) {\n            this.cloudRef.child(\"wall_pictures/\" + doc_id + \"/pic\" + i).delete().then(() => console.log(\"Post has deleted successfully\")).catch(e => console.log(e.name));\n          }\n        }).catch(e => console.log(e.name));\n      }).catch(e => console.log(e.name));\n      const copyPostArray = Object.assign([], this.state.postArray);\n      copyPostArray.splice(index, 1);\n      this.setState({\n        postArray: copyPostArray\n      });\n    };\n\n    this.setPost = element => {\n      element.preventDefault();\n      this.Body = this.state.textInput;\n      this.Image = [];\n      this.setState({\n        textInput: element.target.value\n      });\n    };\n\n    this.setPicText = text => {\n      this.setState({\n        textPictureInput: text\n      });\n      this.Body = this.state.textPictureInput;\n    };\n\n    this.setImagePost = (pictures, url) => {\n      this.ImageFiles = pictures;\n      this.Image = url;\n      this.Body = this.state.textPictureInput;\n      this.setState({\n        textPictureInput: \"\"\n      });\n      this.addPost();\n    };\n\n    this.addPost = () => {\n      if (this.state.textInput === \"\" && this.state.textPictureInput === \"\" && this.Image.length === 0) {\n        alert(\"יש להכניס טקסט ליצירת פרסום\");\n        return;\n      }\n\n      if (this.state.uploadedPost) return;\n      this.setState({\n        uploadedPost: true\n      });\n      var postDocId;\n      var postObj = {\n        uploader: this.userUid,\n        timeStamp: Date.now(),\n        text: this.Body,\n        img: this.Image.length !== 0,\n        unread: true\n      };\n      var postsRef;\n      this.usersRef.doc(this.userUid).get().then(doc => {\n        if (doc.data().type === 'חונך') postsRef = doc.ref.collection('Posts');else if (doc.data().type === 'חניך') postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\n        postsRef.add(postObj).then(doc => {\n          postDocId = doc.id;\n          this.setState({\n            currId: this.postID + 1\n          });\n          this.postID = this.postID + 1;\n          const copyPostArray = Object.assign([], this.state.postArray);\n          copyPostArray.push({\n            id: this.postID,\n            body: this.Body,\n            img: this.Image,\n            timeStamp: Date.now(),\n            uploader: this.userUid,\n            doc_id: postDocId\n          });\n          this.setState({\n            postArray: copyPostArray\n          });\n        }).then(() => {\n          for (let i = 0; i < this.ImageFiles.length; i++) {\n            if (postObj.img) var a = this.cloudRef.child(\"wall_pictures/\" + postDocId + \"/pic\" + i).put(this.ImageFiles[i]);\n\n            try {\n              a.on('state_changed', snapshot => {\n                this.setState({\n                  uploadProgress: snapshot.bytesTransferred / snapshot.totalBytes * 100\n                });\n              });\n            } catch (e) {\n              console.log(e.name);\n            }\n          }\n        }).then(() => {\n          this.setState({\n            textInput: \"\"\n          });\n          this.body = \"\";\n          this.Image = [];\n          this.setState({\n            uploadedPost: false\n          });\n          this.ImageFiles = [];\n        });\n      }).catch(e => console.log(e.name));\n    };\n\n    this.AddPic = () => {\n      this.setState({\n        showPicForm: true\n      });\n    };\n\n    this.callbackForm = formData => {\n      this.setState({\n        showPicForm: formData\n      });\n    };\n\n    this.loadMorePosts = () => {\n      if (typeof this.state.lastPostVisible === 'undefined' || this.state.lastPostVisible === null) return;\n      var startFrom;\n      var copyArray = [];\n      if (typeof this.state.lastPostVisible.timeStamp === 'undefined') startFrom = this.state.lastPostVisible.data().timeStamp;else startFrom = this.state.lastPostVisible.timeStamp;\n      this.setState({\n        loadingPastPosts: true\n      });\n      var postsRef;\n      this.usersRef.doc(this.userUid).get().then(doc => {\n        if (doc.data().type === 'חונך') postsRef = doc.ref.collection('Posts');else if (doc.data().type === 'חניך') postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\n      }).then(() => {\n        postsRef.orderBy(\"timeStamp\", \"desc\").startAfter(startFrom).limit(5).get().then(querySnap => {\n          if (querySnap.docs.length < 5) this.setState({\n            loadedAll: true\n          });\n          if (querySnap.docs.length === 0) return;\n          this.setState({\n            lastPostVisible: querySnap.docs[querySnap.docs.length - 1]\n          });\n          var ind = 0;\n          querySnap.forEach(doc => {\n            this.setState({\n              currId: this.postID + 1\n            });\n            this.postID = this.postID + 1;\n            var images = [];\n            this.cloudRef.child('wall_pictures/' + doc.id).list().then(pics => {\n              pics.items.forEach((pic, index) => {\n                pic.getDownloadURL().then(url => {\n                  images.splice(index, 0, url);\n\n                  if (images.length === pics.items.length) {\n                    var uploadedPostObj = {\n                      id: this.postID,\n                      body: doc.data().text,\n                      img: images,\n                      timeStamp: doc.data().timeStamp,\n                      uploader: doc.data().uploader,\n                      doc_id: doc.id\n                    };\n                    Object.assign(copyArray, this.state.postArray);\n                    copyArray.splice(ind, 0, uploadedPostObj);\n                    copyArray.sort((a, b) => this.sortFunc(a, b));\n                    this.setState({\n                      postArray: [...copyArray]\n                    });\n                  }\n                });\n              });\n            });\n\n            if (!doc.data().img) {\n              var uploadedPostObj = {\n                id: this.postID,\n                body: doc.data().text,\n                img: [],\n                timeStamp: doc.data().timeStamp,\n                uploader: doc.data().uploader,\n                doc_id: doc.id\n              };\n              Object.assign(copyArray, this.state.postArray);\n              copyArray.splice(ind, 0, uploadedPostObj);\n              copyArray.sort((a, b) => this.sortFunc(a, b));\n              this.setState({\n                postArray: [...copyArray]\n              });\n            }\n\n            ind++;\n          });\n        }).then(() => this.setState({\n          loadingPastPosts: false\n        })).catch(e => console.log(e.name));\n      });\n    };\n\n    this.showPicForm = false;\n    this.postID = 0;\n    this.Body = \"\";\n    this.Image = [];\n    this.ImageFiles = [];\n    this.state = {\n      postArray: [],\n      textInput: \"\",\n      textPictureInput: \"\",\n      uploadProgress: 0,\n      currId: 0,\n      lastPostVisible: null,\n      loadedAll: false,\n      loadingPastPosts: false,\n      uploadedPost: false\n    };\n    this.usersRef = firebase.firestore().collection('Users');\n    this.cloudRef = firebase.storage().ref();\n    this.userUid = firebase.auth().currentUser.uid;\n  }\n\n  componentDidMount() {\n    this.readNewmessages();\n    this.getPosts();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* Page Container*/\n      React.createElement(\"div\", {\n        className: \"page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-post-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-new-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-post-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      }, \"\\u05E6\\u05D5\\u05E8 \\u05E4\\u05E8\\u05E1\\u05D5\\u05DD\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-post-tip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }\n      }, \"(\\u05DC\\u05E4\\u05EA\\u05D9\\u05D7\\u05EA \\u05D7\\u05DC\\u05D5\\u05E0\\u05D9\\u05EA \\u05D0\\u05D9\\u05DE\\u05D5\\u05D2'\\u05D9 \\u05E9\\u05DC \\u05D4\\u05D3\\u05E4\\u05D3\\u05E4\\u05DF \\u05DC\\u05D7\\u05E5 \\u05E2\\u05DC \\u05DE\\u05E7\\u05E9 \\u05E0\\u05E7\\u05D5\\u05D3\\u05D4 (./\\u05E5) \\u05D5\\u05E2\\u05DC \\u05DE\\u05E7\\u05E9 Windows \\u05D9\\u05D7\\u05D3\\u05D9\\u05D5)\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-post-mid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        onBlur: this.setPost,\n        placeholder: \"\\u05DB\\u05EA\\u05D5\\u05D1 \\u05E4\\u05E8\\u05E1\\u05D5\\u05DD..\",\n        value: this.state.textInput,\n        onChange: e => this.setState({\n          textInput: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-post-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success wall-post-b-a\",\n        onClick: this.AddPic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }\n      }, \"\\u05E6\\u05E8\\u05E3 \\u05EA\\u05DE\\u05D5\\u05E0\\u05D4\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success wall-post-b-p\",\n        onClick: this.addPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }\n      }, \"\\u05E4\\u05E8\\u05E1\\u05DD\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wall-post-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      }, this.state.postArray.map((post, index) => {\n        return /*#__PURE__*/React.createElement(Post, {\n          myProfilePic: this.props.myProfilePic,\n          friendProfilePic: this.props.friendProfilePic,\n          userName: this.props.userName,\n          friendName: this.props.friendName,\n          key: \"post\" + index,\n          id: post.id,\n          body: post.body,\n          img: post.img,\n          doc_id: post.doc_id,\n          timeStamp: post.timeStamp,\n          uploader: post.uploader,\n          delete: this.deleteEvent.bind(this, index, post.doc_id),\n          uploadProgress: this.state.uploadProgress,\n          currId: this.state.currId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }\n        });\n      }).reverse()), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary load-more-posts\",\n        disabled: this.state.loadedAll,\n        onClick: this.loadMorePosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }\n      }, \"\\u05D8\\u05E2\\u05DF \\u05E4\\u05D5\\u05E1\\u05D8\\u05D9\\u05DD \\u05E0\\u05D5\\u05E1\\u05E4\\u05D9\\u05DD\"), /*#__PURE__*/React.createElement(Loader, {\n        className: \"loader-past-posts\",\n        type: \"TailSpin\",\n        height: \"30px\",\n        width: \"30px\",\n        color: \"royalblue\",\n        visible: this.state.loadingPastPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }\n      })), this.state.showPicForm ? /*#__PURE__*/React.createElement(AddPicture, {\n        parentCallback: this.callbackForm,\n        setImagePostParent: this.setImagePost,\n        setPicText: this.setPicText,\n        showText: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }\n      }) : null)\n    );\n  }\n\n}\n\nexport default WallPost;","map":{"version":3,"sources":["/Users/wadie/BigBrotherBigSisterIsrael/src/navBarComponents/wallComponents/wall/WallPost.jsx"],"names":["React","Post","AddPicture","firebase","Loader","WallPost","Component","constructor","getPosts","postsRef","copyArray","usersRef","doc","userUid","get","then","data","type","ref","collection","link_user","orderBy","limit","docs","setState","lastPostVisible","length","empty","timeStamp","Date","now","state","loadedAll","ind","forEach","currId","postID","images","cloudRef","child","id","list","pics","items","pic","index","getDownloadURL","url","splice","uploadedPostObj","body","text","img","uploader","doc_id","Object","assign","postArray","sort","a","b","sortFunc","catch","e","console","log","name","readNewmessages","linkUser","where","update","unread","deleteEvent","con","window","confirm","delete","picLen","i","copyPostArray","setPost","element","preventDefault","Body","textInput","Image","target","value","setPicText","textPictureInput","setImagePost","pictures","ImageFiles","addPost","alert","uploadedPost","postDocId","postObj","add","push","put","on","snapshot","uploadProgress","bytesTransferred","totalBytes","AddPic","showPicForm","callbackForm","formData","loadMorePosts","startFrom","loadingPastPosts","startAfter","querySnap","firestore","storage","auth","currentUser","uid","componentDidMount","render","map","post","props","myProfilePic","friendProfilePic","userName","friendName","bind","reverse"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport \"./WallPost.css\";\r\nimport { Post } from \"./post/Post\";\r\nimport AddPicture from \"./AddPicture\";\r\nimport firebase from \"../../../config/Firebase\"\r\nimport Loader from 'react-loader-spinner'\r\n\r\nclass WallPost extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.showPicForm = false;\r\n    this.postID = 0;\r\n    this.Body = \"\";\r\n    this.Image = [];\r\n    this.ImageFiles = [];\r\n    this.state = {\r\n      postArray: [],\r\n      textInput: \"\",\r\n      textPictureInput: \"\",\r\n      uploadProgress: 0,\r\n      currId: 0,\r\n      lastPostVisible: null,\r\n      loadedAll: false,\r\n      loadingPastPosts: false,\r\n      uploadedPost: false\r\n    };\r\n    this.usersRef = firebase.firestore().collection('Users');\r\n    this.cloudRef = firebase.storage().ref();\r\n    this.userUid = firebase.auth().currentUser.uid;\r\n  }\r\n\r\n  getPosts = () => {\r\n    var postsRef;\r\n    var copyArray = [];\r\n    this.usersRef.doc(this.userUid).get()\r\n      .then(doc => {\r\n        if (doc.data().type === 'חונך')\r\n          postsRef = doc.ref.collection('Posts');\r\n        else if (doc.data().type === 'חניך')\r\n          postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\r\n      })\r\n      .then(() => {\r\n        postsRef\r\n          .orderBy('timeStamp', 'desc')\r\n          .limit(5)\r\n          .get()\r\n          .then(docs => {\r\n            this.setState({ lastPostVisible: docs.docs[docs.docs.length - 1] }, () => {\r\n              if (docs.empty)\r\n                this.setState({ lastPostVisible: { timeStamp: ((Date.now() / 1000) - 7200) } })\r\n              else if (typeof (this.state.lastPostVisible) === 'undefined')\r\n                this.setState({ loadedAll: true })\r\n            });\r\n            var ind = 0;\r\n            docs.forEach((doc) => {\r\n              this.setState({ currId: this.postID + 1 });\r\n              this.postID = this.postID + 1;\r\n              var images = [];\r\n              this.cloudRef.child('wall_pictures/' + doc.id).list()\r\n                .then(pics => {\r\n                  pics.items.forEach((pic, index) => {\r\n                    pic.getDownloadURL()\r\n                      .then(url => {\r\n                        images.splice(index, 0, url)\r\n                        if (images.length === pics.items.length) {\r\n                          var uploadedPostObj = {\r\n                            id: this.postID,\r\n                            body: doc.data().text,\r\n                            img: images,\r\n                            timeStamp: doc.data().timeStamp,\r\n                            uploader: doc.data().uploader,\r\n                            doc_id: doc.id\r\n                          }\r\n                          Object.assign(copyArray, this.state.postArray);\r\n                          copyArray.splice(ind, 0, uploadedPostObj);\r\n                          copyArray.sort((a, b) => this.sortFunc(a, b));\r\n                          this.setState({\r\n                            postArray: [...copyArray]\r\n                          });\r\n                        }\r\n                      })\r\n                  })\r\n                })\r\n              if (!(doc.data().img)) {\r\n                var uploadedPostObj = {\r\n                  id: this.postID,\r\n                  body: doc.data().text,\r\n                  img: [],\r\n                  timeStamp: doc.data().timeStamp,\r\n                  uploader: doc.data().uploader,\r\n                  doc_id: doc.id\r\n                }\r\n                Object.assign(copyArray, this.state.postArray);\r\n                copyArray.splice(ind, 0, uploadedPostObj);\r\n                copyArray.sort((a, b) => this.sortFunc(a, b));\r\n                this.setState({\r\n                  postArray: [...copyArray]\r\n                });\r\n              }\r\n              ind++;\r\n            })\r\n          })\r\n      })\r\n      .catch(e => console.log(e.name));\r\n  }\r\n\r\n  readNewmessages = () => {\r\n    var linkUser;\r\n    var postsRef;\r\n    this.usersRef.doc(this.userUid).get()\r\n      .then(doc => {\r\n        if (doc.data().type === 'חונך')\r\n          postsRef = doc.ref.collection('Posts');\r\n        else if (doc.data().type === 'חניך')\r\n          postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\r\n        linkUser = doc.data().link_user;\r\n      })\r\n      .then(() => {\r\n        postsRef\r\n          .where('uploader', '==', linkUser)\r\n          .where('unread', '==', true)\r\n          .get()\r\n          .then((docs) =>\r\n            docs.forEach((doc) => doc.ref.update({ unread: false })))\r\n      })\r\n      .catch((e) => console.log(e.name));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.readNewmessages();\r\n    this.getPosts();\r\n  }\r\n\r\n  sortFunc = (a, b) => {\r\n    if (a.timeStamp > b.timeStamp)\r\n      return 1;\r\n    if (a.timeStamp < b.timeStamp)\r\n      return -1;\r\n    return 0;\r\n  }\r\n\r\n  /*חלון פרסום של מודעה חדשה*/\r\n  deleteEvent = (index, doc_id) => {\r\n    var con = window.confirm(\"האם אתה בטוח שברצונך למחוק את הפוסט?\");\r\n    if (!con)\r\n      return;\r\n    var postsRef;\r\n    this.usersRef.doc(this.userUid).get()\r\n      .then(doc => {\r\n        if (doc.data().type === 'חונך')\r\n          postsRef = doc.ref.collection('Posts');\r\n        else if (doc.data().type === 'חניך')\r\n          postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\r\n      })\r\n      .then(() => {\r\n        postsRef.doc(doc_id).delete();\r\n        var picLen;\r\n        this.cloudRef.child(\"wall_pictures/\" + doc_id).list()\r\n          .then(list => picLen = list.items.length)\r\n          .then(() => {\r\n            for (let i = 0; i < picLen; i++) {\r\n\r\n              this.cloudRef.child(\"wall_pictures/\" + doc_id + \"/pic\" + i).delete()\r\n                .then(() => console.log(\"Post has deleted successfully\"))\r\n                .catch((e) => console.log(e.name));\r\n            }\r\n          })\r\n          .catch((e) => console.log(e.name));\r\n      })\r\n      .catch((e) => console.log(e.name));\r\n\r\n    const copyPostArray = Object.assign([], this.state.postArray);\r\n    copyPostArray.splice(index, 1);\r\n    this.setState({\r\n      postArray: copyPostArray,\r\n    });\r\n  };\r\n\r\n  setPost = (element) => {\r\n    element.preventDefault();\r\n\r\n    this.Body = this.state.textInput;\r\n    this.Image = [];\r\n    this.setState({ textInput: element.target.value });\r\n  };\r\n\r\n  setPicText = (text) => {\r\n    this.setState({ textPictureInput: text });\r\n    this.Body = this.state.textPictureInput;\r\n  };\r\n\r\n  setImagePost = (pictures, url) => {\r\n    this.ImageFiles = pictures;\r\n    this.Image = url;\r\n    this.Body = this.state.textPictureInput;\r\n\r\n    this.setState({ textPictureInput: \"\" });\r\n    this.addPost();\r\n  };\r\n\r\n  addPost = () => {\r\n    if (this.state.textInput === \"\" && this.state.textPictureInput === \"\" && this.Image.length === 0) {\r\n      alert(\"יש להכניס טקסט ליצירת פרסום\");\r\n      return;\r\n    }\r\n    if (this.state.uploadedPost)\r\n      return;\r\n    this.setState({ uploadedPost: true })\r\n    var postDocId;\r\n\r\n    var postObj = {\r\n      uploader: this.userUid,\r\n      timeStamp: Date.now(),\r\n      text: this.Body,\r\n      img: this.Image.length !== 0,\r\n      unread: true\r\n    }\r\n    var postsRef;\r\n    this.usersRef.doc(this.userUid).get()\r\n      .then(doc => {\r\n        if (doc.data().type === 'חונך')\r\n          postsRef = doc.ref.collection('Posts');\r\n        else if (doc.data().type === 'חניך')\r\n          postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\r\n\r\n        postsRef\r\n          .add(postObj)\r\n          .then(doc => {\r\n            postDocId = doc.id;\r\n            this.setState({ currId: this.postID + 1 });\r\n            this.postID = this.postID + 1;\r\n            const copyPostArray = Object.assign([], this.state.postArray);\r\n            copyPostArray.push({\r\n              id: this.postID,\r\n              body: this.Body,\r\n              img: this.Image,\r\n              timeStamp: Date.now(),\r\n              uploader: this.userUid,\r\n              doc_id: postDocId\r\n            });\r\n            this.setState({\r\n              postArray: copyPostArray,\r\n            });\r\n          })\r\n          .then(() => {\r\n            for (let i = 0; i < this.ImageFiles.length; i++) {\r\n              if (postObj.img)\r\n                var a = this.cloudRef.child(\"wall_pictures/\" + postDocId + \"/pic\" + i).put(this.ImageFiles[i]);\r\n              try {\r\n                a.on('state_changed', (snapshot) => {\r\n                  this.setState({ uploadProgress: (snapshot.bytesTransferred / snapshot.totalBytes) * 100 });\r\n\r\n                })\r\n              }\r\n              catch (e) {\r\n                console.log(e.name);\r\n              }\r\n            }\r\n          })\r\n          .then(() => {\r\n            this.setState({ textInput: \"\" });\r\n            this.body = \"\";\r\n            this.Image = [];\r\n            this.setState({ uploadedPost: false });\r\n            this.ImageFiles = [];\r\n          })\r\n      })\r\n      .catch((e) => console.log(e.name));\r\n  };\r\n  /*^חלון פרסום של מודעה חדשה^*/\r\n\r\n  AddPic = () => {\r\n    this.setState({\r\n      showPicForm: true,\r\n    });\r\n  };\r\n\r\n  //the funtion that the child will active\r\n  callbackForm = (formData) => {\r\n    this.setState({ showPicForm: formData });\r\n  };\r\n\r\n  loadMorePosts = () => {\r\n    if (typeof (this.state.lastPostVisible) === 'undefined' || this.state.lastPostVisible === null)\r\n      return;\r\n    var startFrom;\r\n    var copyArray = [];\r\n    if (typeof (this.state.lastPostVisible.timeStamp) === 'undefined')\r\n      startFrom = this.state.lastPostVisible.data().timeStamp;\r\n    else\r\n      startFrom = this.state.lastPostVisible.timeStamp;\r\n    this.setState({ loadingPastPosts: true });\r\n    var postsRef;\r\n    this.usersRef.doc(this.userUid).get()\r\n      .then(doc => {\r\n        if (doc.data().type === 'חונך')\r\n          postsRef = doc.ref.collection('Posts');\r\n        else if (doc.data().type === 'חניך')\r\n          postsRef = this.usersRef.doc(doc.data().link_user).collection('Posts');\r\n      })\r\n      .then(() => {\r\n        postsRef\r\n          .orderBy(\"timeStamp\", \"desc\")\r\n          .startAfter(startFrom)\r\n          .limit(5)\r\n          .get()\r\n          .then((querySnap) => {\r\n            if (querySnap.docs.length < 5)\r\n              this.setState({ loadedAll: true })\r\n            if (querySnap.docs.length === 0)\r\n              return;\r\n            this.setState({ lastPostVisible: querySnap.docs[querySnap.docs.length - 1] });\r\n            var ind = 0;\r\n            querySnap.forEach((doc) => {\r\n              this.setState({ currId: this.postID + 1 });\r\n              this.postID = this.postID + 1;\r\n              var images = [];\r\n              this.cloudRef.child('wall_pictures/' + doc.id).list()\r\n                .then(pics => {\r\n                  pics.items.forEach((pic, index) => {\r\n                    pic.getDownloadURL()\r\n                      .then(url => {\r\n                        images.splice(index, 0, url)\r\n                        if (images.length === pics.items.length) {\r\n                          var uploadedPostObj = {\r\n                            id: this.postID,\r\n                            body: doc.data().text,\r\n                            img: images,\r\n                            timeStamp: doc.data().timeStamp,\r\n                            uploader: doc.data().uploader,\r\n                            doc_id: doc.id\r\n                          }\r\n                          Object.assign(copyArray, this.state.postArray);\r\n                          copyArray.splice(ind, 0, uploadedPostObj);\r\n                          copyArray.sort((a, b) => this.sortFunc(a, b));\r\n                          this.setState({\r\n                            postArray: [...copyArray]\r\n                          });\r\n                        }\r\n                      })\r\n                  })\r\n                })\r\n              if (!(doc.data().img)) {\r\n                var uploadedPostObj = {\r\n                  id: this.postID,\r\n                  body: doc.data().text,\r\n                  img: [],\r\n                  timeStamp: doc.data().timeStamp,\r\n                  uploader: doc.data().uploader,\r\n                  doc_id: doc.id\r\n                }\r\n                Object.assign(copyArray, this.state.postArray);\r\n                copyArray.splice(ind, 0, uploadedPostObj)\r\n                copyArray.sort((a, b) => this.sortFunc(a, b));\r\n                this.setState({\r\n                  postArray: [...copyArray]\r\n                });\r\n              }\r\n              ind++;\r\n            })\r\n          })\r\n          .then(() => this.setState({ loadingPastPosts: false }))\r\n          .catch((e) => console.log(e.name))\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      /* Page Container*/\r\n      <div className=\"page-container\" >\r\n        <div className=\"wall-post-main\">\r\n          <div className=\"wall-new-post\">\r\n            <div className=\"wall-post-top\">\r\n              צור פרסום</div>\r\n            <div className=\"wall-post-tip\">\r\n              (לפתיחת חלונית אימוג'י של הדפדפן לחץ על מקש נקודה (./ץ) ועל מקש Windows יחדיו)</div>\r\n            <div className=\"wall-post-mid\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onBlur={this.setPost}\r\n                placeholder=\"כתוב פרסום..\"\r\n                value={this.state.textInput}\r\n                onChange={(e) => this.setState({ textInput: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"wall-post-footer\">\r\n              <button className=\"btn btn-success wall-post-b-a\" onClick={this.AddPic}>\r\n                צרף תמונה\r\n              </button>\r\n              <button className=\"btn btn-success wall-post-b-p\" onClick={this.addPost}>\r\n                פרסם\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"wall-post-list\">\r\n\r\n            {this.state.postArray.map((post, index) => {\r\n              return (\r\n                <Post\r\n                  myProfilePic={this.props.myProfilePic}\r\n                  friendProfilePic={this.props.friendProfilePic}\r\n                  userName={this.props.userName}\r\n                  friendName={this.props.friendName}\r\n                  key={\"post\" + index}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                  img={post.img}\r\n                  doc_id={post.doc_id}\r\n                  timeStamp={post.timeStamp}\r\n                  uploader={post.uploader}\r\n                  delete={this.deleteEvent.bind(this, index, post.doc_id)}\r\n                  uploadProgress={this.state.uploadProgress}\r\n                  currId={this.state.currId}\r\n                />\r\n              );\r\n            }).reverse()}\r\n          </div>\r\n          <button className=\"btn btn-primary load-more-posts\" disabled={this.state.loadedAll} onClick={this.loadMorePosts}>טען פוסטים נוספים</button>\r\n          <Loader className=\"loader-past-posts\" type=\"TailSpin\" height=\"30px\" width=\"30px\" color=\"royalblue\" visible={this.state.loadingPastPosts}></Loader>\r\n        </div>\r\n        {this.state.showPicForm ? (\r\n          <AddPicture\r\n            parentCallback={this.callbackForm}\r\n            setImagePostParent={this.setImagePost}\r\n            setPicText={this.setPicText}\r\n            showText={true}\r\n          />\r\n        ) : null\r\n        }\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default WallPost;"]},"metadata":{},"sourceType":"module"}