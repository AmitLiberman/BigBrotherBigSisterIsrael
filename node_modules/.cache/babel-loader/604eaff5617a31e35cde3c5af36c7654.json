{"ast":null,"code":"var _jsxFileName = \"/Users/wadie/BigBrotherBigSisterIsrael/src/navBarComponents/videoComponents/main/VideoPage.jsx\";\nimport React, { Component } from \"react\";\nimport Video from \"../partial/video/Video\";\nimport VidButtons from \"../partial/video/VidButtons\";\nimport Chat from \"../partial/chat/Chat\";\nimport \"./VideoPage.css\";\nimport firebase from \"../../../config/Firebase\";\nimport Credit from \"../partial/credit/Credit\";\nconst configuration = {\n  // determine internet configuation\n  iceServers: [{\n    urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302']\n  }],\n  iceCandidatePoolSize: 10\n};\nconst constraints = {\n  audio: true,\n  video: {\n    width: {\n      ideal: 1920\n    },\n    height: {\n      ideal: 1080\n    }\n  }\n};\nconst localVideo = React.createRef();\nconst remoteVideo = React.createRef();\n\nclass VideoPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startVideoDirectly = () => {\n      // auto video start\n      this.startVideo();\n      var checkIfStartedStream = setInterval(() => {\n        if (this.state.localStream && this.state.remoteStream) {\n          if (this.props.hostVid) this.createRoom();else this.joinRoomById(this.props.room_id);\n          clearInterval(checkIfStartedStream);\n        }\n      }, 200);\n    };\n\n    this.startVideo = async () => {\n      navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n        console.log(\"Chrome has received your local stream successfully\\nUsing video device: \" + stream.getVideoTracks()[0].label + \"\\nUsing audio device: \" + stream.getAudioTracks()[0].label);\n        this.setState({\n          remoteStream: new MediaStream()\n        }, () => {\n          remoteVideo.current.srcObject = this.state.remoteStream;\n        });\n        this.setState({\n          localStream: stream\n        }, async () => {\n          localVideo.current.srcObject = this.state.localStream;\n          this.setState({\n            isStarted: true,\n            hang_btn_disable: false,\n            start_btn_disable: true\n          });\n          this.props.modifyVideoStream(); // modifing app about a new video stream\n        });\n      }).catch(e => {\n        alert(e.name);\n        this.props.modifyVideoNotAllowed();\n      });\n    };\n\n    this.createRoom = async () => {\n      if (!this.state.isStarted) {\n        alert(\"אנא לחץ על כפתור 'התחל שיחת וידאו'\");\n        return;\n      }\n\n      this.setState({\n        create_btn_disable: true\n      });\n      this.setState({\n        localPeer: new RTCPeerConnection(configuration)\n      }, async () => {\n        // create local peer\n        console.log(\"Created local peer\");\n        this.getMediaTracks();\n        this.getRemoteMediaTracks();\n        this.handleDataChannel('first_channel');\n        const offer = await this.state.localPeer.createOffer(); // creating offer request\n\n        const roomOffer = {\n          offer: {\n            type: offer.type,\n            sdp: offer.sdp\n          }\n        };\n        const roomRef = await this.usersRef.doc(this.props.linkId).collection('Rooms').add(roomOffer);\n        this.connectionHandler(roomRef, 'first_participant', 'second_participant'); // handle internet connection (based on ICE protocol)\n\n        try {\n          await this.state.localPeer.setLocalDescription(offer);\n        } catch (e) {\n          console.log(e.name);\n        }\n\n        var firstSnap = roomRef.onSnapshot(async snapshot => {\n          // waiting for an answer\n          const data = snapshot.data();\n\n          try {\n            if (!this.state.localPeer.currentRemoteDescription && typeof data.answer !== 'undefined') {\n              console.log(`Got update room is ${snapshot.id}`);\n              console.log(`Set remote description: ${data.answer}`);\n              const answer = new RTCSessionDescription(data.answer);\n              console.log(answer);\n              await this.state.localPeer.setRemoteDescription(answer);\n            }\n          } catch (e) {\n            console.log(e.name);\n          }\n        });\n        this.setState({\n          firstSnapShot: firstSnap\n        });\n      });\n    };\n\n    this.joinRoom = guestId => {\n      // For joining a room with entering friend's room ID as an input (optional) \n      if (!this.state.isStarted) {\n        alert(\"אנא לחץ על כפתור 'התחל שיחה'\");\n        return;\n      }\n\n      if (guestId === \"\") {\n        alert(\"אנא הכנס את מספר החדר של החניך/חונך\");\n        return;\n      }\n\n      this.joinRoomById(guestId);\n    };\n\n    this.joinRoomById = async roomIdOfGuest => {\n      this.setState({\n        create_btn_disable: true,\n        join_btn_disable: true\n      });\n      console.log(`You want to join room ${roomIdOfGuest}`);\n\n      if (roomIdOfGuest === \"\") {\n        alert(this.props.linkedName + \" ביטל את השיחה\");\n        document.location.reload(true);\n        return;\n      }\n\n      const roomRef = this.usersRef.doc(this.props.myLinkId).collection('Rooms').doc(`${roomIdOfGuest}`);\n      const roomSnap = await roomRef.get();\n      console.log(`Room existance in DB: ${roomSnap.exists}`);\n\n      if (!roomSnap.exists) {\n        alert(\"החדר לא קיים במערכת. נסה שוב.\");\n        this.setState({\n          create_btn_disable: false,\n          join_btn_disable: false\n        });\n        return;\n      }\n\n      this.setState({\n        readyToJoin: true,\n        roomId: \"מספר החדר שלך הינו: \" + roomRef.id\n      });\n      console.log(`Creating peer connection with the configuration: ${configuration}`);\n      this.setState({\n        localPeer: new RTCPeerConnection(configuration)\n      }, async () => {\n        console.log(\"Created local peer\");\n        this.getMediaTracks();\n        this.getRemoteMediaTracks();\n        this.handleDataChannel('second_channel');\n        this.connectionHandler(roomRef, 'second_participant', 'first_participant'); // handle internet connection (based on ICE protocol)\n\n        const offer = roomSnap.data().offer;\n        console.log(\"created offer\");\n        await this.state.localPeer.setRemoteDescription(offer);\n        const answer = await this.state.localPeer.createAnswer();\n        await this.state.localPeer.setLocalDescription(answer);\n        const roomAnswer = {\n          answer: {\n            type: answer.type,\n            sdp: answer.sdp\n          }\n        };\n        await roomRef.update(roomAnswer);\n      });\n    };\n\n    this.hangUp = (val, willReload = true) => {\n      var isConfirmed;\n      if (!val) isConfirmed = true;else isConfirmed = window.confirm(\"האם אתה בטוח שברצונך לסיים את השיחה?\");\n\n      if (isConfirmed) {\n        this.setState({\n          isFinished: true\n        });\n        if (this.state.localChannel && this.state.localChannel.readyState === 'open' && this.state.remoteChannel && (val || !willReload)) this.state.localChannel.send(JSON.stringify({\n          finish: true\n        }));\n        if (this.state.firstSnapShot !== null) this.state.firstSnapShot();\n        if (this.state.secondSnapShot !== null) this.state.secondSnapShot();\n        clearInterval(this.state.intervalFunc);\n        this.state.localStream.getTracks().forEach(track => track.stop());\n        console.log(\"Closed local tracks\");\n\n        if (this.state.remoteStream) {\n          this.state.remoteStream.getTracks().forEach(track => track.stop());\n          console.log(\"Closed remote tracks\");\n        }\n\n        if (val && willReload && this.state.isConnected) alert(\"סיימת את השיחה. זמן השיחה: \" + this.state.timer[0] + \":\" + this.state.timer[1] + \"\" + this.state.timer[2] + \":\" + this.state.timer[3] + \"\" + this.state.timer[4]);else if (!val && willReload && this.state.isConnected) alert(\"זמן השיחה: \" + this.state.timer[0] + \":\" + this.state.timer[1] + \"\" + this.state.timer[2] + \":\" + this.state.timer[3] + \"\" + this.state.timer[4]);\n\n        if (this.state.localPeer !== null) {\n          this.state.localPeer.close();\n          console.log(\"Closed local peer\");\n        }\n\n        this.setState({\n          localPeer: null\n        });\n\n        if (willReload) {\n          setTimeout(() => {\n            document.location.reload(true);\n          }, 500);\n        } else this.props.removeDocs();\n      }\n    };\n\n    this.connectionHandler = async (roomRef, localName, remoteName) => {\n      // handle internet connection\n      const candidateCol = roomRef.collection(localName);\n\n      try {\n        this.state.localPeer.addEventListener('icecandidate', event => {\n          if (event.candidate) {\n            const jsonData = event.candidate.toJSON();\n            candidateCol.add(jsonData);\n          }\n        });\n      } catch (e) {\n        console.log(e.name);\n      }\n\n      try {\n        this.state.localPeer.onconnectionstatechange = this.onIceChanged;\n      } catch (e) {\n        console.log(e.name);\n      }\n\n      var secondSnap = roomRef.collection(remoteName).onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          if (change.type === \"added\" || change.doc.data()) {\n            const candidate = new RTCIceCandidate(change.doc.data());\n            this.state.localPeer.addIceCandidate(candidate);\n            console.log(`candidate success`);\n          }\n        });\n      });\n      this.setState({\n        secondSnapShot: secondSnap\n      });\n    };\n\n    this.onIceChanged = e => {\n      // internet connection change event\n      var currStat = e.target;\n      console.log(`ICE connection state changed: ${currStat.iceConnectionState}`);\n      if (currStat.iceConnectionState === \"connected\" && !this.state.isConnected) // first time connection\n        this.onCandidateConnected();else if (currStat.iceConnectionState === \"connected\" && this.state.isConnected) // reconnection\n        this.onReconnection();else if (currStat.iceConnectionState === \"disconnected\" && this.state.isConnected) // disconnecction after connection\n        this.onCandidateDisconnected();else if ((currStat.iceConnectionState === \"disconnected\" || currStat.iceConnectionState === \"checking\") && !this.state.isConnected) // disconnection before connection\n        this.onCandidateChecking();\n    };\n\n    this.mateDisconnected = () => {\n      clearInterval(this.state.intervalFunc);\n      alert(this.props.linkedName + \" סיים את השיחה.\");\n      this.hangUp(false);\n    };\n\n    this.onCandidateConnected = () => {\n      console.log(\"תהליך ההתחברות הסתיים בהצלחה.\");\n      this.setState({\n        isConnected: true,\n        muteVis: \"visible\",\n        vidVis: \"visible\",\n        create_btn_disable: true,\n        join_btn_disable: true,\n        send_btn_disable: false,\n        input_disable: false,\n        fullScreen: false\n      });\n      if (this.state.intervalFunc === null) this.setState({\n        intervalFunc: setInterval(this.intervalFunc, 1000)\n      });\n    };\n\n    this.unavailableConnection = () => {\n      clearTimeout(this.setState.timeoutDisconnected);\n      var iceConnectionState = this.state.localPeer.iceConnectionState;\n\n      if (iceConnectionState === \"disconnected\" || iceConnectionState === \"checking\") {\n        clearInterval(this.state.intervalFunc);\n        alert(this.props.linkedName + \" חווה בעיית אינטרנט. נסו שוב מאוחר יותר.\");\n        this.hangUp(false);\n      }\n    };\n\n    this.onReconnection = () => {\n      this.setState({\n        disconFlag: false\n      });\n    };\n\n    this.onCandidateDisconnected = () => {\n      if (!this.state.disconFlag) {\n        this.setState({\n          timeoutDisconnected: setTimeout(this.unavailableConnection, 15000),\n          disconFlag: true\n        });\n      }\n    };\n\n    this.checkCon = () => {\n      clearTimeout(this.state.timeoutChecking);\n\n      if (!this.state.isConnected) {\n        clearInterval(this.state.intervalFunc);\n        alert(\"תהליך ההתחברות נכשל. אנא נסה שוב בעוד מספר דקות.\");\n        this.hangUp(false);\n      } else this.setState({\n        checkFlag: false\n      });\n    };\n\n    this.onCandidateChecking = () => {\n      if (!this.state.checkFlag) this.setState({\n        timeoutChecking: setTimeout(this.checkCon, 10000),\n        checkFlag: true,\n        readyToJoin: true\n      });\n    };\n\n    this.intervalFunc = () => {\n      if (this.state.timer[4] !== 9) this.setState({\n        timer: [this.state.timer[0], this.state.timer[1], this.state.timer[2], this.state.timer[3], this.state.timer[4] + 1]\n      });else if (this.state.timer[4] === 9 && this.state.timer[3] !== 5) this.setState({\n        timer: [this.state.timer[0], this.state.timer[1], this.state.timer[2], this.state.timer[3] + 1, 0]\n      });else if (this.state.timer[4] === 9 && this.state.timer[3] === 5 && this.state.timer[2] !== 9) this.setState({\n        timer: [this.state.timer[0], this.state.timer[1], this.state.timer[2] + 1, 0, 0]\n      });else if (this.state.timer[4] === 9 && this.state.timer[3] === 5 && this.state.timer[2] === 9 && this.state.timer[1] !== 5) this.setState({\n        timer: [this.state.timer[0], this.state.timer[1] + 1, 0, 0, 0]\n      });else this.setState({\n        timer: [this.state.timer[0] + 1, 0, 0, 0, 0]\n      });\n    };\n\n    this.mute = () => {\n      if (this.state.localStream.getAudioTracks()[0].enabled) {\n        this.setState({\n          mute_icon: \"blue\"\n        });\n        this.state.localChannel.send(JSON.stringify({\n          mute: true\n        }));\n      } else {\n        this.setState({\n          mute_icon: \"black\"\n        });\n        this.state.localChannel.send(JSON.stringify({\n          mute: false\n        }));\n      }\n\n      this.state.localStream.getAudioTracks()[0].enabled = !this.state.localStream.getAudioTracks()[0].enabled;\n    };\n\n    this.stopVideo = () => {\n      if (this.state.localStream.getVideoTracks()[0].enabled) {\n        this.setState({\n          video_icon: \"blue\"\n        });\n        this.state.localChannel.send(JSON.stringify({\n          video: true\n        }));\n      } else {\n        this.setState({\n          video_icon: \"black\"\n        });\n        this.state.localChannel.send(JSON.stringify({\n          video: false\n        }));\n      }\n\n      this.state.localStream.getVideoTracks()[0].enabled = !this.state.localStream.getVideoTracks()[0].enabled;\n    };\n\n    this.handleDataChannel = async dataChannelName => {\n      //creating data channel\n      const dataPar = {\n        ordered: true\n      };\n      this.setState({\n        localChannel: this.state.localPeer.createDataChannel(dataChannelName, dataPar)\n      }, () => {\n        this.state.localChannel.binaryType = 'arraybuffer';\n        this.state.localChannel.onopen = this.openDataChannel;\n        this.state.localChannel.onclose = this.closedDataChannel;\n        this.state.localPeer.ondatachannel = this.remoteOpenDataChannel;\n      });\n    };\n\n    this.getMediaTracks = async () => {\n      if (typeof this.state.localStream !== 'undefined') {\n        this.state.localStream.getTracks().forEach(track => this.state.localPeer.addTrack(track, this.state.localStream));\n        console.log(\"Local stream has added to peer\");\n      }\n    };\n\n    this.getRemoteMediaTracks = async () => {\n      this.state.localPeer.addEventListener('track', event => {\n        console.log(`Got remote track: ${event.streams[0]}`);\n        event.streams[0].getTracks().forEach(track => {\n          console.log(`Added track to the remote stream: ${track}`);\n          this.state.remoteStream.addTrack(track);\n        });\n      });\n    };\n\n    this.openDataChannel = async () => {\n      console.log(\"Local channel has opened\");\n    };\n\n    this.closedDataChannel = async () => {\n      console.log(\"Local channel has closed\");\n      if (this.state.isConnected && !this.state.isFinished) alert(\"סיימת את השיחה. זמן השיחה: \" + this.state.timer[0] + \":\" + this.state.timer[1] + \"\" + this.state.timer[2] + \":\" + this.state.timer[3] + \"\" + this.state.timer[4]);\n    };\n\n    this.remoteOpenDataChannel = async event => {\n      event.preventDefault();\n      this.setState({\n        remoteChannel: event.channel\n      }, () => {\n        this.state.remoteChannel.onmessage = this.getMessage;\n      });\n    };\n\n    this.getMessage = async event => {\n      event.preventDefault();\n      var newMessage = JSON.parse(event.data);\n      if (typeof newMessage === 'string') this.setState({\n        outMes: {\n          mes: newMessage\n        }\n      });else if (newMessage.finish === true) this.setState({\n        isFinished: true\n      }, this.mateDisconnected());else if (newMessage.mute === true) this.setState({\n        rem_mute_icon: \"blue\"\n      });else if (newMessage.mute === false) this.setState({\n        rem_mute_icon: \"black\"\n      });else if (newMessage.video === true) this.setState({\n        rem_video_icon: \"blue\"\n      });else if (newMessage.video === false) this.setState({\n        rem_video_icon: \"black\"\n      });\n    };\n\n    this.sendMessage = async message => {\n      this.state.localChannel.send(JSON.stringify(message));\n      console.log(\"The message was sent: \" + message);\n    };\n\n    this.state = {\n      localStream: null,\n      remoteStream: null,\n      localPeer: null,\n      roomId: \"\",\n      localChannel: null,\n      remoteChannel: null,\n      start_btn_disable: false,\n      hang_btn_disable: true,\n      create_btn_disable: false,\n      join_btn_disable: false,\n      send_btn_disable: true,\n      input_disable: true,\n      fullScreen: true,\n      muteVis: \"hidden\",\n      vidVis: \"hidden\",\n      isStarted: false,\n      isConnected: false,\n      isFinished: false,\n      readyToJoin: false,\n      timer: [0, 0, 0, 0, 0],\n      intervalFunc: null,\n      timeoutChecking: null,\n      timeoutDisconnected: null,\n      outMes: {\n        mes: \"\"\n      },\n      disconFlag: false,\n      checkFlag: false,\n      firstSnapShot: null,\n      secondSnapShot: null,\n      firstTimeDirect: true,\n      mute_icon: \"black\",\n      video_icon: \"black\",\n      rem_mute_icon: \"black\",\n      rem_video_icon: \"black\"\n    };\n    this.usersRef = firebase.firestore().collection('Users');\n  }\n\n  componentDidMount() {\n    if (this.props.directVid && (this.props.room_id !== \"\" || this.props.hostVid)) this.startVideoDirectly();\n  }\n\n  componentWillUnmount(event) {\n    if (this.state.isStarted) this.hangUp(false, false);\n  }\n\n  componentDidUpdate(prevProp) {\n    if (this.props.directVid !== prevProp.directVid) if (this.props.directVid) this.startVideoDirectly();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-vid-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Video, {\n      localRef: localVideo,\n      remoteRef: remoteVideo,\n      timer: this.state.timer,\n      fullScreenDisable: this.state.fullScreen,\n      userName: this.props.userName,\n      linkedName: this.props.linkedName,\n      isConnected: this.state.isConnected,\n      readyToJoin: this.state.readyToJoin,\n      disconnectionStat: this.state.disconFlag,\n      mute_icon: this.state.mute_icon,\n      video_icon: this.state.video_icon,\n      rem_mute_icon: this.state.rem_mute_icon,\n      rem_video_icon: this.state.rem_video_icon,\n      mute_func: this.mute,\n      stop_vid_func: this.stopVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Chat, {\n      sendMessage: this.sendMessage,\n      outMes: this.state.outMes,\n      sendDisable: this.state.send_btn_disable,\n      inputDisable: this.state.input_disable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VidButtons, {\n      startVideo: this.startVideo,\n      createRoom: this.createRoom,\n      joinRoom: this.joinRoom,\n      hangUp: () => this.hangUp(true),\n      muteVis: this.state.muteVis,\n      vidVis: this.state.vidVis,\n      mute: this.mute,\n      stopVideo: this.stopVideo,\n      startDisable: this.state.start_btn_disable,\n      hangDisable: this.state.hang_btn_disable,\n      createDisable: this.state.create_btn_disable,\n      joinDisable: this.state.join_btn_disable,\n      linkedName: this.props.linkedName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Credit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default VideoPage;","map":{"version":3,"sources":["/Users/wadie/BigBrotherBigSisterIsrael/src/navBarComponents/videoComponents/main/VideoPage.jsx"],"names":["React","Component","Video","VidButtons","Chat","firebase","Credit","configuration","iceServers","urls","iceCandidatePoolSize","constraints","audio","video","width","ideal","height","localVideo","createRef","remoteVideo","VideoPage","constructor","props","startVideoDirectly","startVideo","checkIfStartedStream","setInterval","state","localStream","remoteStream","hostVid","createRoom","joinRoomById","room_id","clearInterval","navigator","mediaDevices","getUserMedia","then","stream","console","log","getVideoTracks","label","getAudioTracks","setState","MediaStream","current","srcObject","isStarted","hang_btn_disable","start_btn_disable","modifyVideoStream","catch","e","alert","name","modifyVideoNotAllowed","create_btn_disable","localPeer","RTCPeerConnection","getMediaTracks","getRemoteMediaTracks","handleDataChannel","offer","createOffer","roomOffer","type","sdp","roomRef","usersRef","doc","linkId","collection","add","connectionHandler","setLocalDescription","firstSnap","onSnapshot","snapshot","data","currentRemoteDescription","answer","id","RTCSessionDescription","setRemoteDescription","firstSnapShot","joinRoom","guestId","roomIdOfGuest","join_btn_disable","linkedName","document","location","reload","myLinkId","roomSnap","get","exists","readyToJoin","roomId","createAnswer","roomAnswer","update","hangUp","val","willReload","isConfirmed","window","confirm","isFinished","localChannel","readyState","remoteChannel","send","JSON","stringify","finish","secondSnapShot","intervalFunc","getTracks","forEach","track","stop","isConnected","timer","close","setTimeout","removeDocs","localName","remoteName","candidateCol","addEventListener","event","candidate","jsonData","toJSON","onconnectionstatechange","onIceChanged","secondSnap","docChanges","change","RTCIceCandidate","addIceCandidate","currStat","target","iceConnectionState","onCandidateConnected","onReconnection","onCandidateDisconnected","onCandidateChecking","mateDisconnected","muteVis","vidVis","send_btn_disable","input_disable","fullScreen","unavailableConnection","clearTimeout","timeoutDisconnected","disconFlag","checkCon","timeoutChecking","checkFlag","mute","enabled","mute_icon","stopVideo","video_icon","dataChannelName","dataPar","ordered","createDataChannel","binaryType","onopen","openDataChannel","onclose","closedDataChannel","ondatachannel","remoteOpenDataChannel","addTrack","streams","preventDefault","channel","onmessage","getMessage","newMessage","parse","outMes","mes","rem_mute_icon","rem_video_icon","sendMessage","message","firstTimeDirect","firestore","componentDidMount","directVid","componentWillUnmount","componentDidUpdate","prevProp","render","userName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Video from \"../partial/video/Video\";\r\nimport VidButtons from \"../partial/video/VidButtons\";\r\nimport Chat from \"../partial/chat/Chat\";\r\nimport \"./VideoPage.css\";\r\nimport firebase from \"../../../config/Firebase\"\r\nimport Credit from \"../partial/credit/Credit\"\r\n\r\nconst configuration = { // determine internet configuation\r\n  iceServers: [\r\n    {\r\n      urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\r\n    }\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n};\r\n\r\nconst constraints = {\r\n  audio: true,\r\n  video: {\r\n    width: { ideal: 1920 },\r\n    height: { ideal: 1080 }\r\n  }\r\n};\r\n\r\nconst localVideo = React.createRef();\r\n\r\nconst remoteVideo = React.createRef();\r\n\r\nclass VideoPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      localStream: null,\r\n      remoteStream: null,\r\n      localPeer: null,\r\n      roomId: \"\",\r\n      localChannel: null,\r\n      remoteChannel: null,\r\n      start_btn_disable: false,\r\n      hang_btn_disable: true,\r\n      create_btn_disable: false,\r\n      join_btn_disable: false,\r\n      send_btn_disable: true,\r\n      input_disable: true,\r\n      fullScreen: true,\r\n      muteVis: \"hidden\",\r\n      vidVis: \"hidden\",\r\n      isStarted: false,\r\n      isConnected: false,\r\n      isFinished: false,\r\n      readyToJoin: false,\r\n      timer: [0, 0, 0, 0, 0],\r\n      intervalFunc: null,\r\n      timeoutChecking: null,\r\n      timeoutDisconnected: null,\r\n      outMes: { mes: \"\" },\r\n      disconFlag: false,\r\n      checkFlag: false,\r\n      firstSnapShot: null,\r\n      secondSnapShot: null,\r\n      firstTimeDirect: true,\r\n      mute_icon: \"black\",\r\n      video_icon: \"black\",\r\n      rem_mute_icon: \"black\",\r\n      rem_video_icon: \"black\"\r\n    }\r\n    this.usersRef = firebase.firestore().collection('Users');\r\n  }\r\n\r\n  startVideoDirectly = () => { // auto video start\r\n    this.startVideo();\r\n    var checkIfStartedStream = setInterval(() => {\r\n      if (this.state.localStream && this.state.remoteStream) {\r\n        if (this.props.hostVid)\r\n          this.createRoom();\r\n        else\r\n          this.joinRoomById(this.props.room_id);\r\n        clearInterval(checkIfStartedStream)\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.directVid && (this.props.room_id !== \"\" || this.props.hostVid))\r\n      this.startVideoDirectly();\r\n  }\r\n\r\n  componentWillUnmount(event) {\r\n    if (this.state.isStarted)\r\n      this.hangUp(false, false);\r\n  }\r\n\r\n  componentDidUpdate(prevProp) {\r\n    if (this.props.directVid !== prevProp.directVid)\r\n      if (this.props.directVid)\r\n        this.startVideoDirectly();\r\n  }\r\n\r\n  startVideo = async () => {\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n      .then(stream => {\r\n        console.log(\"Chrome has received your local stream successfully\\nUsing video device: \" +\r\n          stream.getVideoTracks()[0].label + \"\\nUsing audio device: \" + stream.getAudioTracks()[0].label);\r\n        this.setState({ remoteStream: new MediaStream() }, () => {\r\n          remoteVideo.current.srcObject = this.state.remoteStream;\r\n        });\r\n        this.setState({ localStream: stream }, async () => {\r\n          localVideo.current.srcObject = this.state.localStream;\r\n          this.setState({\r\n            isStarted: true,\r\n            hang_btn_disable: false, start_btn_disable: true\r\n          });\r\n          this.props.modifyVideoStream(); // modifing app about a new video stream\r\n        });\r\n      })\r\n      .catch(e => {\r\n        alert(e.name);\r\n        this.props.modifyVideoNotAllowed();\r\n      });\r\n  }\r\n\r\n  createRoom = async () => {\r\n    if (!this.state.isStarted) {\r\n      alert(\"אנא לחץ על כפתור 'התחל שיחת וידאו'\")\r\n      return;\r\n    }\r\n\r\n    this.setState({ create_btn_disable: true })\r\n\r\n    this.setState({ localPeer: new RTCPeerConnection(configuration) }, async () => {   // create local peer\r\n      console.log(\"Created local peer\");\r\n      this.getMediaTracks();\r\n      this.getRemoteMediaTracks();\r\n      this.handleDataChannel('first_channel');\r\n\r\n\r\n      const offer = await this.state.localPeer.createOffer(); // creating offer request\r\n\r\n      const roomOffer = {\r\n        offer: {\r\n          type: offer.type,\r\n          sdp: offer.sdp\r\n        }\r\n      }\r\n\r\n      const roomRef = await this.usersRef\r\n        .doc(this.props.linkId)\r\n        .collection('Rooms')\r\n        .add(roomOffer);\r\n\r\n      this.connectionHandler(roomRef, 'first_participant', 'second_participant'); // handle internet connection (based on ICE protocol)\r\n      try {\r\n        await this.state.localPeer.setLocalDescription(offer);\r\n      }\r\n      catch (e) {\r\n        console.log(e.name);\r\n      }\r\n      var firstSnap = roomRef.onSnapshot(async snapshot => { // waiting for an answer\r\n        const data = snapshot.data();\r\n        try {\r\n          if (!this.state.localPeer.currentRemoteDescription && typeof (data.answer) !== 'undefined') {\r\n            console.log(`Got update room is ${snapshot.id}`)\r\n            console.log(`Set remote description: ${data.answer}`);\r\n            const answer = new RTCSessionDescription(data.answer);\r\n            console.log(answer);\r\n            await this.state.localPeer.setRemoteDescription(answer);\r\n          }\r\n        }\r\n        catch (e) {\r\n          console.log(e.name);\r\n        }\r\n      });\r\n      this.setState({ firstSnapShot: firstSnap });\r\n    });\r\n  }\r\n\r\n  joinRoom = (guestId) => { // For joining a room with entering friend's room ID as an input (optional) \r\n    if (!this.state.isStarted) {\r\n      alert(\"אנא לחץ על כפתור 'התחל שיחה'\")\r\n      return;\r\n    }\r\n    if (guestId === \"\") {\r\n      alert(\"אנא הכנס את מספר החדר של החניך/חונך\");\r\n      return;\r\n    }\r\n    this.joinRoomById(guestId);\r\n  }\r\n\r\n  joinRoomById = async (roomIdOfGuest) => {\r\n    this.setState({\r\n      create_btn_disable: true,\r\n      join_btn_disable: true\r\n    });\r\n    console.log(`You want to join room ${roomIdOfGuest}`);\r\n    if (roomIdOfGuest === \"\") {\r\n      alert(this.props.linkedName + \" ביטל את השיחה\");\r\n      document.location.reload(true);\r\n      return;\r\n    }\r\n\r\n    const roomRef = this.usersRef\r\n      .doc(this.props.myLinkId)\r\n      .collection('Rooms')\r\n      .doc(`${roomIdOfGuest}`);\r\n    const roomSnap = await roomRef.get();\r\n    console.log(`Room existance in DB: ${roomSnap.exists}`);\r\n\r\n    if (!roomSnap.exists) {\r\n      alert(\"החדר לא קיים במערכת. נסה שוב.\");\r\n      this.setState({\r\n        create_btn_disable: false,\r\n        join_btn_disable: false\r\n      })\r\n      return;\r\n    }\r\n    this.setState({ readyToJoin: true, roomId: \"מספר החדר שלך הינו: \" + roomRef.id });\r\n    console.log(`Creating peer connection with the configuration: ${configuration}`);\r\n    this.setState({ localPeer: new RTCPeerConnection(configuration) }, async () => {\r\n      console.log(\"Created local peer\");\r\n      this.getMediaTracks();\r\n      this.getRemoteMediaTracks();\r\n      this.handleDataChannel('second_channel');\r\n\r\n      this.connectionHandler(roomRef, 'second_participant', 'first_participant'); // handle internet connection (based on ICE protocol)\r\n\r\n      const offer = roomSnap.data().offer;\r\n      console.log(\"created offer\");\r\n      await this.state.localPeer.setRemoteDescription(offer);\r\n      const answer = await this.state.localPeer.createAnswer();\r\n      await this.state.localPeer.setLocalDescription(answer);\r\n      const roomAnswer = {\r\n        answer: {\r\n          type: answer.type,\r\n          sdp: answer.sdp\r\n        }\r\n      }\r\n      await roomRef.update(roomAnswer);\r\n    });\r\n  }\r\n\r\n  hangUp = (val, willReload = true) => {\r\n    var isConfirmed;\r\n    if (!val)\r\n      isConfirmed = true;\r\n    else\r\n      isConfirmed = window.confirm(\"האם אתה בטוח שברצונך לסיים את השיחה?\");\r\n    if (isConfirmed) {\r\n      this.setState({ isFinished: true });\r\n      if (this.state.localChannel && this.state.localChannel.readyState === 'open' &&\r\n        this.state.remoteChannel && (val || !willReload))\r\n        this.state.localChannel.send(JSON.stringify({ finish: true }))\r\n      if (this.state.firstSnapShot !== null)\r\n        this.state.firstSnapShot();\r\n      if (this.state.secondSnapShot !== null)\r\n        this.state.secondSnapShot();\r\n      clearInterval(this.state.intervalFunc);\r\n      this.state.localStream.getTracks().forEach(track => track.stop());\r\n      console.log(\"Closed local tracks\")\r\n      if (this.state.remoteStream) {\r\n        this.state.remoteStream.getTracks().forEach(track => track.stop());\r\n        console.log(\"Closed remote tracks\")\r\n      }\r\n      if (val && willReload && this.state.isConnected)\r\n        alert(\"סיימת את השיחה. זמן השיחה: \" +\r\n          this.state.timer[0] + \":\" + this.state.timer[1] + \"\" +\r\n          this.state.timer[2] + \":\" + this.state.timer[3] + \"\" +\r\n          this.state.timer[4]);\r\n      else if (!val && willReload && this.state.isConnected)\r\n        alert(\"זמן השיחה: \" +\r\n          this.state.timer[0] + \":\" + this.state.timer[1] + \"\" +\r\n          this.state.timer[2] + \":\" + this.state.timer[3] + \"\" +\r\n          this.state.timer[4]);\r\n      if (this.state.localPeer !== null) {\r\n        this.state.localPeer.close();\r\n        console.log(\"Closed local peer\")\r\n      }\r\n      this.setState({ localPeer: null });\r\n      if (willReload) {\r\n        setTimeout(() => {\r\n          document.location.reload(true);\r\n        }, 500);\r\n      }\r\n      else\r\n        this.props.removeDocs();\r\n    }\r\n  }\r\n\r\n  connectionHandler = async (roomRef, localName, remoteName) => { // handle internet connection\r\n    const candidateCol = roomRef.collection(localName);\r\n    try {\r\n      this.state.localPeer.addEventListener('icecandidate', event => {\r\n        if (event.candidate) {\r\n          const jsonData = event.candidate.toJSON();\r\n          candidateCol.add(jsonData);\r\n        }\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e.name)\r\n    }\r\n    try {\r\n      this.state.localPeer.onconnectionstatechange = this.onIceChanged;\r\n    }\r\n    catch (e) {\r\n      console.log(e.name)\r\n    }\r\n    var secondSnap = roomRef.collection(remoteName).onSnapshot(snapshot => {\r\n      snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.doc.data()) {\r\n          const candidate = new RTCIceCandidate(change.doc.data());\r\n          this.state.localPeer.addIceCandidate(candidate);\r\n          console.log(`candidate success`);\r\n        }\r\n      });\r\n    });\r\n    this.setState({ secondSnapShot: secondSnap });\r\n  }\r\n\r\n  onIceChanged = (e) => { // internet connection change event\r\n    var currStat = e.target;\r\n    console.log(`ICE connection state changed: ${currStat.iceConnectionState}`);\r\n    if (currStat.iceConnectionState === \"connected\" && !this.state.isConnected) // first time connection\r\n      this.onCandidateConnected();\r\n    else if (currStat.iceConnectionState === \"connected\" && this.state.isConnected) // reconnection\r\n      this.onReconnection();\r\n    else if (currStat.iceConnectionState === \"disconnected\" && this.state.isConnected) // disconnecction after connection\r\n      this.onCandidateDisconnected();\r\n    else if ((currStat.iceConnectionState === \"disconnected\" || currStat.iceConnectionState === \"checking\")\r\n      && !this.state.isConnected) // disconnection before connection\r\n      this.onCandidateChecking();\r\n  };\r\n\r\n  mateDisconnected = () => {\r\n    clearInterval(this.state.intervalFunc);\r\n    alert(this.props.linkedName + \" סיים את השיחה.\");\r\n    this.hangUp(false);\r\n  }\r\n\r\n  onCandidateConnected = () => {\r\n    console.log(\"תהליך ההתחברות הסתיים בהצלחה.\")\r\n    this.setState({\r\n      isConnected: true, muteVis: \"visible\",\r\n      vidVis: \"visible\", create_btn_disable: true,\r\n      join_btn_disable: true, send_btn_disable: false,\r\n      input_disable: false, fullScreen: false\r\n    });\r\n    if (this.state.intervalFunc === null)\r\n      this.setState({ intervalFunc: setInterval(this.intervalFunc, 1000) });\r\n  }\r\n\r\n  unavailableConnection = () => {\r\n    clearTimeout(this.setState.timeoutDisconnected);\r\n    var iceConnectionState = this.state.localPeer.iceConnectionState;\r\n    if (iceConnectionState === \"disconnected\" || iceConnectionState === \"checking\") {\r\n      clearInterval(this.state.intervalFunc);\r\n      alert(this.props.linkedName + \" חווה בעיית אינטרנט. נסו שוב מאוחר יותר.\");\r\n      this.hangUp(false);\r\n    }\r\n  }\r\n\r\n  onReconnection = () => {\r\n    this.setState({ disconFlag: false });\r\n  }\r\n\r\n  onCandidateDisconnected = () => {\r\n    if (!this.state.disconFlag) {\r\n      this.setState({\r\n        timeoutDisconnected: setTimeout(this.unavailableConnection, 15000),\r\n        disconFlag: true\r\n      });\r\n    }\r\n  }\r\n\r\n  checkCon = () => {\r\n    clearTimeout(this.state.timeoutChecking);\r\n    if (!this.state.isConnected) {\r\n      clearInterval(this.state.intervalFunc);\r\n      alert(\"תהליך ההתחברות נכשל. אנא נסה שוב בעוד מספר דקות.\");\r\n      this.hangUp(false);\r\n    }\r\n    else\r\n      this.setState({ checkFlag: false });\r\n  }\r\n\r\n  onCandidateChecking = () => {\r\n    if (!this.state.checkFlag)\r\n      this.setState({\r\n        timeoutChecking: setTimeout(this.checkCon, 10000),\r\n        checkFlag: true, readyToJoin: true\r\n      });\r\n  }\r\n\r\n  intervalFunc = () => {\r\n    if (this.state.timer[4] !== 9)\r\n      this.setState({\r\n        timer: [this.state.timer[0],\r\n        this.state.timer[1],\r\n        this.state.timer[2],\r\n        this.state.timer[3],\r\n        this.state.timer[4] + 1]\r\n      })\r\n    else if (this.state.timer[4] === 9\r\n      && this.state.timer[3] !== 5)\r\n      this.setState({\r\n        timer: [this.state.timer[0],\r\n        this.state.timer[1],\r\n        this.state.timer[2],\r\n        this.state.timer[3] + 1, 0]\r\n      });\r\n    else if (this.state.timer[4] === 9 &&\r\n      this.state.timer[3] === 5 &&\r\n      this.state.timer[2] !== 9)\r\n      this.setState({\r\n        timer: [this.state.timer[0],\r\n        this.state.timer[1],\r\n        this.state.timer[2] + 1, 0, 0]\r\n      });\r\n    else if (this.state.timer[4] === 9 &&\r\n      this.state.timer[3] === 5 &&\r\n      this.state.timer[2] === 9 &&\r\n      this.state.timer[1] !== 5)\r\n      this.setState({\r\n        timer: [this.state.timer[0],\r\n        this.state.timer[1] + 1, 0, 0, 0]\r\n      });\r\n    else\r\n      this.setState({\r\n        timer: [this.state.timer[0] + 1, 0, 0, 0, 0]\r\n      });\r\n  }\r\n\r\n  mute = () => {\r\n    if (this.state.localStream.getAudioTracks()[0].enabled) {\r\n      this.setState({ mute_icon: \"blue\" })\r\n      this.state.localChannel.send(JSON.stringify({ mute: true }))\r\n    }\r\n    else {\r\n      this.setState({ mute_icon: \"black\" })\r\n      this.state.localChannel.send(JSON.stringify({ mute: false }))\r\n    }\r\n    this.state.localStream.getAudioTracks()[0].enabled = !(this.state.localStream.getAudioTracks()[0].enabled);\r\n  }\r\n\r\n  stopVideo = () => {\r\n    if (this.state.localStream.getVideoTracks()[0].enabled) {\r\n      this.setState({ video_icon: \"blue\" })\r\n      this.state.localChannel.send(JSON.stringify({ video: true }))\r\n    }\r\n    else {\r\n      this.setState({ video_icon: \"black\" })\r\n      this.state.localChannel.send(JSON.stringify({ video: false }))\r\n    }\r\n    this.state.localStream.getVideoTracks()[0].enabled = !(this.state.localStream.getVideoTracks()[0].enabled);\r\n  }\r\n\r\n  handleDataChannel = async (dataChannelName) => {\r\n    //creating data channel\r\n    const dataPar = { ordered: true };\r\n    this.setState({ localChannel: this.state.localPeer.createDataChannel(dataChannelName, dataPar) },\r\n      () => {\r\n        this.state.localChannel.binaryType = 'arraybuffer';\r\n        this.state.localChannel.onopen = this.openDataChannel;\r\n        this.state.localChannel.onclose = this.closedDataChannel;\r\n        this.state.localPeer.ondatachannel = this.remoteOpenDataChannel;\r\n      });\r\n  }\r\n\r\n  getMediaTracks = async () => {\r\n    if (typeof (this.state.localStream) !== 'undefined') {\r\n      this.state.localStream.getTracks()\r\n        .forEach(track => this.state.localPeer\r\n          .addTrack(track, this.state.localStream));\r\n      console.log(\"Local stream has added to peer\");\r\n    }\r\n  }\r\n\r\n  getRemoteMediaTracks = async () => {\r\n    this.state.localPeer.addEventListener('track', event => {\r\n      console.log(`Got remote track: ${event.streams[0]}`);\r\n      event.streams[0].getTracks().forEach(track => {\r\n        console.log(`Added track to the remote stream: ${track}`);\r\n        this.state.remoteStream.addTrack(track);\r\n      });\r\n    });\r\n  }\r\n\r\n  openDataChannel = async () => {\r\n    console.log(\"Local channel has opened\");\r\n  }\r\n\r\n  closedDataChannel = async () => {\r\n    console.log(\"Local channel has closed\");\r\n    if (this.state.isConnected && !this.state.isFinished)\r\n      alert(\"סיימת את השיחה. זמן השיחה: \" +\r\n        this.state.timer[0] + \":\" + this.state.timer[1] + \"\" +\r\n        this.state.timer[2] + \":\" + this.state.timer[3] + \"\" +\r\n        this.state.timer[4]);\r\n  }\r\n\r\n  remoteOpenDataChannel = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ remoteChannel: event.channel }, () => {\r\n      this.state.remoteChannel.onmessage = this.getMessage;\r\n    });\r\n  }\r\n\r\n  getMessage = async (event) => {\r\n    event.preventDefault();\r\n    var newMessage = JSON.parse(event.data);\r\n    if (typeof (newMessage) === 'string')\r\n      this.setState({ outMes: { mes: newMessage } });\r\n    else if (newMessage.finish === true)\r\n      this.setState({ isFinished: true }, this.mateDisconnected());\r\n    else if (newMessage.mute === true)\r\n      this.setState({ rem_mute_icon: \"blue\" });\r\n    else if (newMessage.mute === false)\r\n      this.setState({ rem_mute_icon: \"black\" });\r\n    else if (newMessage.video === true)\r\n      this.setState({ rem_video_icon: \"blue\" });\r\n    else if (newMessage.video === false)\r\n      this.setState({ rem_video_icon: \"black\" });\r\n  }\r\n\r\n  sendMessage = async (message) => {\r\n    this.state.localChannel.send(JSON.stringify(message));\r\n    console.log(\"The message was sent: \" + message);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-vid-page\" >\r\n\r\n        <Video\r\n          localRef={localVideo}\r\n          remoteRef={remoteVideo}\r\n          timer={this.state.timer}\r\n          fullScreenDisable={this.state.fullScreen}\r\n          userName={this.props.userName}\r\n          linkedName={this.props.linkedName}\r\n          isConnected={this.state.isConnected}\r\n          readyToJoin={this.state.readyToJoin}\r\n          disconnectionStat={this.state.disconFlag}\r\n          mute_icon={this.state.mute_icon}\r\n          video_icon={this.state.video_icon}\r\n          rem_mute_icon={this.state.rem_mute_icon}\r\n          rem_video_icon={this.state.rem_video_icon}\r\n          mute_func={this.mute}\r\n          stop_vid_func={this.stopVideo}\r\n        />\r\n\r\n        <Chat\r\n          sendMessage={this.sendMessage}\r\n          outMes={this.state.outMes}\r\n          sendDisable={this.state.send_btn_disable}\r\n          inputDisable={this.state.input_disable}\r\n        />\r\n\r\n        <VidButtons\r\n          startVideo={this.startVideo}\r\n          createRoom={this.createRoom}\r\n          joinRoom={this.joinRoom}\r\n          hangUp={() => this.hangUp(true)}\r\n          muteVis={this.state.muteVis}\r\n          vidVis={this.state.vidVis}\r\n          mute={this.mute}\r\n          stopVideo={this.stopVideo}\r\n          startDisable={this.state.start_btn_disable}\r\n          hangDisable={this.state.hang_btn_disable}\r\n          createDisable={this.state.create_btn_disable}\r\n          joinDisable={this.state.join_btn_disable}\r\n          linkedName={this.props.linkedName}\r\n        />\r\n        <Credit />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoPage;\r\n"]},"metadata":{},"sourceType":"module"}